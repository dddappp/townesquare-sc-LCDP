// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package xyz.townesquare.sc.aptos.contract.service;

import com.github.wubuku.aptos.bean.Event;
import com.github.wubuku.aptos.utils.NodeApiClient;

import xyz.townesquare.sc.domain.townesquarestate.AbstractTownesquareStateEvent;
import xyz.townesquare.sc.aptos.contract.ContractConstants;
import xyz.townesquare.sc.aptos.contract.DomainBeanUtils;
import xyz.townesquare.sc.aptos.contract.AptosAccount;

import xyz.townesquare.sc.aptos.contract.townesquarestate.TownesquareStateCreated;
import xyz.townesquare.sc.aptos.contract.townesquarestate.TownesquareStateUpdated;
import xyz.townesquare.sc.aptos.contract.townesquarestate.TownesquareStateDeleted;
import xyz.townesquare.sc.aptos.contract.repository.TownesquareStateEventRepository;
import xyz.townesquare.sc.aptos.contract.repository.AptosAccountRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.io.IOException;
import java.math.*;
import java.util.*;


@Service
public class TownesquareStateEventService {

    public static final java.util.Set<String> DELETION_COMMAND_EVENTS = new java.util.HashSet<>(java.util.Arrays.asList("TownesquareStateDeleted"));

    public static boolean isDeletionCommand(String eventType) {
        return DELETION_COMMAND_EVENTS.contains(eventType);
    }

    public static boolean isDeletionCommand(AbstractTownesquareStateEvent e) {
        if (isDeletionCommand(e.getEventClass())) {
            return true;
        }
        return false;
    }

    @Value("${aptos.contract.address}")
    private String aptosContractAddress;

    @Autowired
    private AptosAccountRepository aptosAccountRepository;

    @Autowired
    private NodeApiClient aptosNodeApiClient;

    @Autowired
    private TownesquareStateEventRepository townesquareStateEventRepository;

    @Transactional
    public void updateStatusToProcessed(AbstractTownesquareStateEvent event) {
        event.setStatus("D");
        townesquareStateEventRepository.save(event);
    }

    @Transactional
    public void pullTownesquareStateCreatedEvents() {
        String resourceAccountAddress = getResourceAccountAddress();
        if (resourceAccountAddress == null) {
            return;
        }
        int limit = 1;
        BigInteger cursor = getTownesquareStateCreatedEventNextCursor();
        if (cursor == null) {
            cursor = BigInteger.ZERO;
        }
        while (true) {
            List<Event<TownesquareStateCreated>> eventPage;
            try {
                eventPage = aptosNodeApiClient.getEventsByEventHandle(
                        resourceAccountAddress,
                        this.aptosContractAddress + "::" + ContractConstants.TOWNESQUARE_STATE_MODULE_EVENTS,
                        ContractConstants.TOWNESQUARE_STATE_MODULE_TOWNESQUARE_STATE_CREATED_HANDLE_FIELD,
                        TownesquareStateCreated.class,
                        cursor.longValue(),
                        limit
                );
            } catch (IOException e) {
                throw new RuntimeException(e);
            }

            if (eventPage != null && eventPage.size() > 0) {
                cursor = cursor.add(BigInteger.ONE);
                for (Event<TownesquareStateCreated> eventEnvelope : eventPage) {
                    eventEnvelope.getData().setAccountAddress(resourceAccountAddress);
                    saveTownesquareStateCreated(eventEnvelope);
                }
            } else {
                break;
            }
        }
    }

    private BigInteger getTownesquareStateCreatedEventNextCursor() {
        AbstractTownesquareStateEvent.TownesquareStateCreated lastEvent = townesquareStateEventRepository.findFirstTownesquareStateCreatedByOrderByAptosEventSequenceNumber();
        return lastEvent != null ? lastEvent.getAptosEventSequenceNumber() : null;
    }

    private void saveTownesquareStateCreated(Event<TownesquareStateCreated> eventEnvelope) {
        AbstractTownesquareStateEvent.TownesquareStateCreated townesquareStateCreated = DomainBeanUtils.toTownesquareStateCreated(eventEnvelope);
        if (townesquareStateEventRepository.findById(townesquareStateCreated.getTownesquareStateEventId()).isPresent()) {
            return;
        }
        townesquareStateEventRepository.save(townesquareStateCreated);
    }

    @Transactional
    public void pullTownesquareStateUpdatedEvents() {
        String resourceAccountAddress = getResourceAccountAddress();
        if (resourceAccountAddress == null) {
            return;
        }
        int limit = 1;
        BigInteger cursor = getTownesquareStateUpdatedEventNextCursor();
        if (cursor == null) {
            cursor = BigInteger.ZERO;
        }
        while (true) {
            List<Event<TownesquareStateUpdated>> eventPage;
            try {
                eventPage = aptosNodeApiClient.getEventsByEventHandle(
                        resourceAccountAddress,
                        this.aptosContractAddress + "::" + ContractConstants.TOWNESQUARE_STATE_MODULE_EVENTS,
                        ContractConstants.TOWNESQUARE_STATE_MODULE_TOWNESQUARE_STATE_UPDATED_HANDLE_FIELD,
                        TownesquareStateUpdated.class,
                        cursor.longValue(),
                        limit
                );
            } catch (IOException e) {
                throw new RuntimeException(e);
            }

            if (eventPage != null && eventPage.size() > 0) {
                cursor = cursor.add(BigInteger.ONE);
                for (Event<TownesquareStateUpdated> eventEnvelope : eventPage) {
                    eventEnvelope.getData().setAccountAddress(resourceAccountAddress);
                    saveTownesquareStateUpdated(eventEnvelope);
                }
            } else {
                break;
            }
        }
    }

    private BigInteger getTownesquareStateUpdatedEventNextCursor() {
        AbstractTownesquareStateEvent.TownesquareStateUpdated lastEvent = townesquareStateEventRepository.findFirstTownesquareStateUpdatedByOrderByAptosEventSequenceNumber();
        return lastEvent != null ? lastEvent.getAptosEventSequenceNumber() : null;
    }

    private void saveTownesquareStateUpdated(Event<TownesquareStateUpdated> eventEnvelope) {
        AbstractTownesquareStateEvent.TownesquareStateUpdated townesquareStateUpdated = DomainBeanUtils.toTownesquareStateUpdated(eventEnvelope);
        if (townesquareStateEventRepository.findById(townesquareStateUpdated.getTownesquareStateEventId()).isPresent()) {
            return;
        }
        townesquareStateEventRepository.save(townesquareStateUpdated);
    }

    @Transactional
    public void pullTownesquareStateDeletedEvents() {
        String resourceAccountAddress = getResourceAccountAddress();
        if (resourceAccountAddress == null) {
            return;
        }
        int limit = 1;
        BigInteger cursor = getTownesquareStateDeletedEventNextCursor();
        if (cursor == null) {
            cursor = BigInteger.ZERO;
        }
        while (true) {
            List<Event<TownesquareStateDeleted>> eventPage;
            try {
                eventPage = aptosNodeApiClient.getEventsByEventHandle(
                        resourceAccountAddress,
                        this.aptosContractAddress + "::" + ContractConstants.TOWNESQUARE_STATE_MODULE_EVENTS,
                        ContractConstants.TOWNESQUARE_STATE_MODULE_TOWNESQUARE_STATE_DELETED_HANDLE_FIELD,
                        TownesquareStateDeleted.class,
                        cursor.longValue(),
                        limit
                );
            } catch (IOException e) {
                throw new RuntimeException(e);
            }

            if (eventPage != null && eventPage.size() > 0) {
                cursor = cursor.add(BigInteger.ONE);
                for (Event<TownesquareStateDeleted> eventEnvelope : eventPage) {
                    eventEnvelope.getData().setAccountAddress(resourceAccountAddress);
                    saveTownesquareStateDeleted(eventEnvelope);
                }
            } else {
                break;
            }
        }
    }

    private BigInteger getTownesquareStateDeletedEventNextCursor() {
        AbstractTownesquareStateEvent.TownesquareStateDeleted lastEvent = townesquareStateEventRepository.findFirstTownesquareStateDeletedByOrderByAptosEventSequenceNumber();
        return lastEvent != null ? lastEvent.getAptosEventSequenceNumber() : null;
    }

    private void saveTownesquareStateDeleted(Event<TownesquareStateDeleted> eventEnvelope) {
        AbstractTownesquareStateEvent.TownesquareStateDeleted townesquareStateDeleted = DomainBeanUtils.toTownesquareStateDeleted(eventEnvelope);
        if (townesquareStateEventRepository.findById(townesquareStateDeleted.getTownesquareStateEventId()).isPresent()) {
            return;
        }
        townesquareStateEventRepository.save(townesquareStateDeleted);
    }

    private String getResourceAccountAddress() {
        return aptosAccountRepository.findById(ContractConstants.RESOURCE_ACCOUNT_ADDRESS)
                .map(AptosAccount::getAddress).orElse(null);
    }
}
