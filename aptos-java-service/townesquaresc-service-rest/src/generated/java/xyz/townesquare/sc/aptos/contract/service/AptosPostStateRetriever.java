// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package xyz.townesquare.sc.aptos.contract.service;


import com.github.wubuku.aptos.bean.AccountResource;
import com.github.wubuku.aptos.utils.*;
import xyz.townesquare.sc.aptos.contract.AptosAccount;
import xyz.townesquare.sc.aptos.contract.ContractConstants;
import xyz.townesquare.sc.aptos.contract.DomainBeanUtils;
import xyz.townesquare.sc.aptos.contract.repository.AptosAccountRepository;
import xyz.townesquare.sc.domain.post.*;
import xyz.townesquare.sc.domain.*;
import xyz.townesquare.sc.aptos.contract.Post;

import java.io.IOException;
import java.math.*;
import java.util.*;
import java.util.function.*;


public class AptosPostStateRetriever {

    private NodeApiClient aptosNodeApiClient;

    private String aptosContractAddress;

    private AptosAccountRepository aptosAccountRepository;

    private Function<BigInteger, PostState.MutablePostState> postStateFactory;


    public AptosPostStateRetriever(NodeApiClient aptosNodeApiClient,
                                    String aptosContractAddress,
                                    AptosAccountRepository aptosAccountRepository,
                                    Function<BigInteger, PostState.MutablePostState> postStateFactory
    ) {
        this.aptosNodeApiClient = aptosNodeApiClient;
        this.aptosContractAddress = aptosContractAddress;
        this.aptosAccountRepository = aptosAccountRepository;
        this.postStateFactory = postStateFactory;
    }

    public PostState retrievePostState(BigInteger postId) {
        String resourceAccountAddress = getResourceAccountAddress();
        AccountResource<Post.Tables> accountResource;
        try {
            accountResource = aptosNodeApiClient.getAccountResource(resourceAccountAddress,
                    this.aptosContractAddress + "::" + ContractConstants.POST_MODULE_TABLES,
                    Post.Tables.class,
                    null);
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
        String tableHandle = accountResource.getData().getPostTable().getHandle();
        Post post;
        try {
            post = aptosNodeApiClient.getTableItem(
                    tableHandle,
                    ContractConstants.toNumericalAddressType(ContractConstants.POST_ID_TYPE, this.aptosContractAddress),
                    this.aptosContractAddress + "::" + ContractConstants.POST_MODULE_POST,
                    postId.toString(),
                    Post.class,
                    null
            );
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
        return toPostState(post);
    }

    private PostState toPostState(Post post) {
        PostState.MutablePostState postState = postStateFactory.apply(post.getPostId());
        postState.setVersion(post.getVersion());
        postState.setPoster(post.getPoster());
        postState.setUserId(post.getUserId());
        postState.setContent(post.getContent());
        postState.setDigest(post.getDigest());
        return postState;
    }

    private String getResourceAccountAddress() {
        return aptosAccountRepository.findById(ContractConstants.RESOURCE_ACCOUNT_ADDRESS)
                .map(AptosAccount::getAddress).orElse(null);
    }

}

