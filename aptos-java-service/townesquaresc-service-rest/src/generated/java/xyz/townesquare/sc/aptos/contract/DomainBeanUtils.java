// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package xyz.townesquare.sc.aptos.contract;

import java.math.*;

import com.github.wubuku.aptos.bean.Event;
import com.github.wubuku.aptos.bean.Option;
import xyz.townesquare.sc.domain.AptosEvent;
import xyz.townesquare.sc.domain.AptosEventGuid;
import xyz.townesquare.sc.domain.post.AbstractPostEvent;
import xyz.townesquare.sc.aptos.contract.post.PostEvent;
import xyz.townesquare.sc.domain.user.AbstractUserEvent;
import xyz.townesquare.sc.aptos.contract.user.UserCreated;
import xyz.townesquare.sc.aptos.contract.user.UserUpdated;
import xyz.townesquare.sc.domain.townesquarestate.AbstractTownesquareStateEvent;
import xyz.townesquare.sc.aptos.contract.townesquarestate.TownesquareStateCreated;
import xyz.townesquare.sc.aptos.contract.townesquarestate.TownesquareStateUpdated;
import xyz.townesquare.sc.aptos.contract.townesquarestate.TownesquareStateDeleted;

/**
 * Utils that convert beans in the contract package to domain beans.
 */
public class DomainBeanUtils {
    private DomainBeanUtils() {
    }

    public static xyz.townesquare.sc.domain.Coin toCoin(Coin contractCoin) {
        if (contractCoin == null) {
            return null;
        }
        xyz.townesquare.sc.domain.Coin coin = new xyz.townesquare.sc.domain.Coin();
        coin.setValue(contractCoin.getValue());
        return coin;
    }


    public static AbstractPostEvent.PostEvent toPostEvent(Event<PostEvent> eventEnvelope) {
        PostEvent contractEvent = eventEnvelope.getData();

        AbstractPostEvent.PostEvent postEvent = new AbstractPostEvent.PostEvent();
        postEvent.setEventType(contractEvent.getEventType());
        postEvent.setPostId(contractEvent.getPostId());
        postEvent.setPoster(contractEvent.getPoster());
        postEvent.setUserId(contractEvent.getUserId());
        postEvent.setContent(contractEvent.getContent());
        postEvent.setDigest(contractEvent.getDigest());
        postEvent.setVersion(contractEvent.getVersion());

        setAptosEventProperties(postEvent, eventEnvelope);

        return postEvent;
    }

    public static AbstractUserEvent.UserCreated toUserCreated(Event<UserCreated> eventEnvelope) {
        UserCreated contractEvent = eventEnvelope.getData();

        AbstractUserEvent.UserCreated userCreated = new AbstractUserEvent.UserCreated();
        userCreated.setUserWallet(contractEvent.getUserWallet());
        userCreated.setUsername(contractEvent.getUsername());
        userCreated.setProfileImage(contractEvent.getProfileImage());
        userCreated.setBio(contractEvent.getBio());
        userCreated.setVersion(BigInteger.valueOf(-1));

        setAptosEventProperties(userCreated, eventEnvelope);

        return userCreated;
    }

    public static AbstractUserEvent.UserUpdated toUserUpdated(Event<UserUpdated> eventEnvelope) {
        UserUpdated contractEvent = eventEnvelope.getData();

        AbstractUserEvent.UserUpdated userUpdated = new AbstractUserEvent.UserUpdated();
        userUpdated.setUserWallet(contractEvent.getUserWallet());
        userUpdated.setUsername(contractEvent.getUsername());
        userUpdated.setProfileImage(contractEvent.getProfileImage());
        userUpdated.setBio(contractEvent.getBio());
        userUpdated.setVersion(contractEvent.getVersion());

        setAptosEventProperties(userUpdated, eventEnvelope);

        return userUpdated;
    }

    public static AbstractTownesquareStateEvent.TownesquareStateCreated toTownesquareStateCreated(Event<TownesquareStateCreated> eventEnvelope) {
        TownesquareStateCreated contractEvent = eventEnvelope.getData();

        AbstractTownesquareStateEvent.TownesquareStateCreated townesquareStateCreated = new AbstractTownesquareStateEvent.TownesquareStateCreated();
        townesquareStateCreated.setAccountAddress(contractEvent.getAccountAddress());
        townesquareStateCreated.setIsEmergency(contractEvent.getIsEmergency());
        townesquareStateCreated.setUserAdmin(contractEvent.getUserAdmin());
        townesquareStateCreated.setPostAdmin(contractEvent.getPostAdmin());
        townesquareStateCreated.setVersion(BigInteger.valueOf(-1));

        setAptosEventProperties(townesquareStateCreated, eventEnvelope);

        return townesquareStateCreated;
    }

    public static AbstractTownesquareStateEvent.TownesquareStateUpdated toTownesquareStateUpdated(Event<TownesquareStateUpdated> eventEnvelope) {
        TownesquareStateUpdated contractEvent = eventEnvelope.getData();

        AbstractTownesquareStateEvent.TownesquareStateUpdated townesquareStateUpdated = new AbstractTownesquareStateEvent.TownesquareStateUpdated();
        townesquareStateUpdated.setAccountAddress(contractEvent.getAccountAddress());
        townesquareStateUpdated.setIsEmergency(contractEvent.getIsEmergency());
        townesquareStateUpdated.setUserAdmin(contractEvent.getUserAdmin());
        townesquareStateUpdated.setPostAdmin(contractEvent.getPostAdmin());
        townesquareStateUpdated.setVersion(contractEvent.getVersion());

        setAptosEventProperties(townesquareStateUpdated, eventEnvelope);

        return townesquareStateUpdated;
    }

    public static AbstractTownesquareStateEvent.TownesquareStateDeleted toTownesquareStateDeleted(Event<TownesquareStateDeleted> eventEnvelope) {
        TownesquareStateDeleted contractEvent = eventEnvelope.getData();

        AbstractTownesquareStateEvent.TownesquareStateDeleted townesquareStateDeleted = new AbstractTownesquareStateEvent.TownesquareStateDeleted();
        townesquareStateDeleted.setAccountAddress(contractEvent.getAccountAddress());
        townesquareStateDeleted.setVersion(contractEvent.getVersion());

        setAptosEventProperties(townesquareStateDeleted, eventEnvelope);

        return townesquareStateDeleted;
    }

    public static void setAptosEventProperties(AptosEvent.MutableAptosEvent domainAptosEvent, Event<?> eventEnvelope) {
        domainAptosEvent.setAptosEventGuid(toAptosEventGuid(eventEnvelope.getGuid()));
        domainAptosEvent.setAptosEventType(eventEnvelope.getType());
        domainAptosEvent.setAptosEventSequenceNumber(new BigInteger(eventEnvelope.getSequenceNumber()));
        domainAptosEvent.setAptosEventVersion(new BigInteger(eventEnvelope.getVersion()));
    }

    public static AptosEventGuid toAptosEventGuid(com.github.wubuku.aptos.bean.Event.Guid eventGuid) {
        return new AptosEventGuid(new BigInteger(eventGuid.getCreationNumber()),eventGuid.getAccountAddress());
    }

    private static <T> T extractOptionalValue(Option<T> optionView) {
        return optionView == null ? null
                : (optionView.getVec() == null || optionView.getVec().size() == 0) ? null
                : optionView.getVec().get(0);
    }
}
