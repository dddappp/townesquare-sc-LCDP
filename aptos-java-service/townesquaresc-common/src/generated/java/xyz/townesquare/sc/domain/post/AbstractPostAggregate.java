// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package xyz.townesquare.sc.domain.post;

import java.util.*;
import java.math.BigInteger;
import java.util.Date;
import xyz.townesquare.sc.domain.*;
import xyz.townesquare.sc.specialization.*;

public abstract class AbstractPostAggregate extends AbstractAggregate implements PostAggregate {
    private PostState.MutablePostState state;

    private List<Event> changes = new ArrayList<Event>();

    public AbstractPostAggregate(PostState state) {
        this.state = (PostState.MutablePostState)state;
    }

    public PostState getState() {
        return this.state;
    }

    public List<Event> getChanges() {
        return this.changes;
    }

    public void throwOnInvalidStateTransition(Command c) {
        PostCommand.throwOnInvalidStateTransition(this.state, c);
    }

    protected void apply(Event e) {
        onApplying(e);
        state.mutate(e);
        changes.add(e);
    }


    ////////////////////////

    public static class SimplePostAggregate extends AbstractPostAggregate {
        public SimplePostAggregate(PostState state) {
            super(state);
        }

        @Override
        public void create(String poster, String userId, String content, String digest, Long offChainVersion, String commandId, String requesterId, PostCommands.Create c) {
            throw new UnsupportedOperationException();
        }

        @Override
        public void delete(Long offChainVersion, String commandId, String requesterId, PostCommands.Delete c) {
            throw new UnsupportedOperationException();
        }

        protected void verifyCreate(String poster, String userId, String content, String digest, PostCommands.Create c) {
            String Poster = poster;
            String UserId = userId;
            String Content = content;
            String Digest = digest;

            ReflectUtils.invokeStaticMethod(
                    "xyz.townesquare.sc.domain.post.CreateLogic",
                    "verify",
                    new Class[]{PostState.class, String.class, String.class, String.class, String.class, VerificationContext.class},
                    new Object[]{getState(), poster, userId, content, digest, VerificationContext.forCommand(c)}
            );

//package xyz.townesquare.sc.domain.post;
//
//public class CreateLogic {
//    public static void verify(PostState postState, String poster, String userId, String content, String digest, VerificationContext verificationContext) {
//    }
//}

        }
           

        protected void verifyDelete(PostCommands.Delete c) {

            ReflectUtils.invokeStaticMethod(
                    "xyz.townesquare.sc.domain.post.DeleteLogic",
                    "verify",
                    new Class[]{PostState.class, VerificationContext.class},
                    new Object[]{getState(), VerificationContext.forCommand(c)}
            );

//package xyz.townesquare.sc.domain.post;
//
//public class DeleteLogic {
//    public static void verify(PostState postState, VerificationContext verificationContext) {
//    }
//}

        }
           

    }

}

